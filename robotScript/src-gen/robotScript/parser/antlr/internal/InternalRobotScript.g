/*
 * generated by Xtext 2.32.0
 */
grammar InternalRobotScript;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package robotScript.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package robotScript.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import robotScript.services.RobotScriptGrammarAccess;

}

@parser::members {

 	private RobotScriptGrammarAccess grammarAccess;

    public InternalRobotScriptParser(TokenStream input, RobotScriptGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "EntryPoint";
   	}

   	@Override
   	protected RobotScriptGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleEntryPoint
entryRuleEntryPoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntryPointRule()); }
	iv_ruleEntryPoint=ruleEntryPoint
	{ $current=$iv_ruleEntryPoint.current; }
	EOF;

// Rule EntryPoint
ruleEntryPoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEntryPointAccess().getEntryPointAction_0(),
					$current);
			}
		)
		otherlv_1='EntryPoint'
		{
			newLeafNode(otherlv_1, grammarAccess.getEntryPointAccess().getEntryPointKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEntryPointAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='functions'
			{
				newLeafNode(otherlv_3, grammarAccess.getEntryPointAccess().getFunctionsKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getEntryPointAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntryPointAccess().getFunctionsFunctionDefParserRuleCall_3_2_0());
					}
					lv_functions_5_0=ruleFunctionDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntryPointRule());
						}
						add(
							$current,
							"functions",
							lv_functions_5_0,
							"robotScript.RobotScript.FunctionDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getEntryPointAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEntryPointAccess().getFunctionsFunctionDefParserRuleCall_3_3_1_0());
						}
						lv_functions_7_0=ruleFunctionDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEntryPointRule());
							}
							add(
								$current,
								"functions",
								lv_functions_7_0,
								"robotScript.RobotScript.FunctionDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getEntryPointAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getEntryPointAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleAnyType
entryRuleAnyType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnyTypeRule()); }
	iv_ruleAnyType=ruleAnyType
	{ $current=$iv_ruleAnyType.current; }
	EOF;

// Rule AnyType
ruleAnyType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAnyTypeAccess().getVoidTypeParserRuleCall_0());
		}
		this_VoidType_0=ruleVoidType
		{
			$current = $this_VoidType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAnyTypeAccess().getNumberTypeParserRuleCall_1());
		}
		this_NumberType_1=ruleNumberType
		{
			$current = $this_NumberType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAnyTypeAccess().getBooleanTypeParserRuleCall_2());
		}
		this_BooleanType_2=ruleBooleanType
		{
			$current = $this_BooleanType_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	iv_ruleCommand=ruleCommand
	{ $current=$iv_ruleCommand.current; }
	EOF;

// Rule Command
ruleCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCommandAccess().getVarDeclParserRuleCall_0());
		}
		this_VarDecl_0=ruleVarDecl
		{
			$current = $this_VarDecl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getLoopParserRuleCall_1());
		}
		this_Loop_1=ruleLoop
		{
			$current = $this_Loop_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getIf_ImplParserRuleCall_2());
		}
		this_If_Impl_2=ruleIf_Impl
		{
			$current = $this_If_Impl_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getIfElseParserRuleCall_3());
		}
		this_IfElse_3=ruleIfElse
		{
			$current = $this_IfElse_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getAssignAtDeclParserRuleCall_4());
		}
		this_AssignAtDecl_4=ruleAssignAtDecl
		{
			$current = $this_AssignAtDecl_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getReAssignParserRuleCall_5());
		}
		this_ReAssign_5=ruleReAssign
		{
			$current = $this_ReAssign_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getSetSpeedParserRuleCall_6());
		}
		this_SetSpeed_6=ruleSetSpeed
		{
			$current = $this_SetSpeed_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getRotationParserRuleCall_7());
		}
		this_Rotation_7=ruleRotation
		{
			$current = $this_Rotation_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getFrontParserRuleCall_8());
		}
		this_Front_8=ruleFront
		{
			$current = $this_Front_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getBackParserRuleCall_9());
		}
		this_Back_9=ruleBack
		{
			$current = $this_Back_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getRightParserRuleCall_10());
		}
		this_Right_10=ruleRight
		{
			$current = $this_Right_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getLeftParserRuleCall_11());
		}
		this_Left_11=ruleLeft
		{
			$current = $this_Left_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getFunCallParserRuleCall_12());
		}
		this_FunCall_12=ruleFunCall
		{
			$current = $this_FunCall_12.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	iv_ruleDataType=ruleDataType
	{ $current=$iv_ruleDataType.current; }
	EOF;

// Rule DataType
ruleDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDataTypeAccess().getNumberTypeParserRuleCall_0());
		}
		this_NumberType_0=ruleNumberType
		{
			$current = $this_NumberType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeAccess().getBooleanTypeParserRuleCall_1());
		}
		this_BooleanType_1=ruleBooleanType
		{
			$current = $this_BooleanType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getNegParserRuleCall_0());
		}
		this_Neg_0=ruleNeg
		{
			$current = $this_Neg_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getNotParserRuleCall_1());
		}
		this_Not_1=ruleNot
		{
			$current = $this_Not_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getGreaterParserRuleCall_2());
		}
		this_Greater_2=ruleGreater
		{
			$current = $this_Greater_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getAndParserRuleCall_3());
		}
		this_And_3=ruleAnd
		{
			$current = $this_And_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getAddParserRuleCall_4());
		}
		this_Add_4=ruleAdd
		{
			$current = $this_Add_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getLessParserRuleCall_5());
		}
		this_Less_5=ruleLess
		{
			$current = $this_Less_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getOrParserRuleCall_6());
		}
		this_Or_6=ruleOr
		{
			$current = $this_Or_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getSubParserRuleCall_7());
		}
		this_Sub_7=ruleSub
		{
			$current = $this_Sub_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getGEqParserRuleCall_8());
		}
		this_GEq_8=ruleGEq
		{
			$current = $this_GEq_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getEquParserRuleCall_9());
		}
		this_Equ_9=ruleEqu
		{
			$current = $this_Equ_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getMulParserRuleCall_10());
		}
		this_Mul_10=ruleMul
		{
			$current = $this_Mul_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getLEqParserRuleCall_11());
		}
		this_LEq_11=ruleLEq
		{
			$current = $this_LEq_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getNEqParserRuleCall_12());
		}
		this_NEq_12=ruleNEq
		{
			$current = $this_NEq_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getDivParserRuleCall_13());
		}
		this_Div_13=ruleDiv
		{
			$current = $this_Div_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getTimeSensorParserRuleCall_14());
		}
		this_TimeSensor_14=ruleTimeSensor
		{
			$current = $this_TimeSensor_14.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getDistSensorParserRuleCall_15());
		}
		this_DistSensor_15=ruleDistSensor
		{
			$current = $this_DistSensor_15.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getBoolLiteralParserRuleCall_16());
		}
		this_BoolLiteral_16=ruleBoolLiteral
		{
			$current = $this_BoolLiteral_16.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getNumberLiteralParserRuleCall_17());
		}
		this_NumberLiteral_17=ruleNumberLiteral
		{
			$current = $this_NumberLiteral_17.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getSpeedStateParserRuleCall_18());
		}
		this_SpeedState_18=ruleSpeedState
		{
			$current = $this_SpeedState_18.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getVariableParserRuleCall_19());
		}
		this_Variable_19=ruleVariable
		{
			$current = $this_Variable_19.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getFunCallParserRuleCall_20());
		}
		this_FunCall_20=ruleFunCall
		{
			$current = $this_FunCall_20.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFunctionDef
entryRuleFunctionDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionDefRule()); }
	iv_ruleFunctionDef=ruleFunctionDef
	{ $current=$iv_ruleFunctionDef.current; }
	EOF;

// Rule FunctionDef
ruleFunctionDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FunctionDef'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionDefAccess().getFunctionDefKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDefAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDefRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"robotScript.RobotScript.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionDefAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='returnType'
		{
			newLeafNode(otherlv_3, grammarAccess.getFunctionDefAccess().getReturnTypeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDefAccess().getReturnTypeAnyTypeParserRuleCall_4_0());
				}
				lv_returnType_4_0=ruleAnyType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDefRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_4_0,
						"robotScript.RobotScript.AnyType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='body'
			{
				newLeafNode(otherlv_5, grammarAccess.getFunctionDefAccess().getBodyKeyword_5_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getFunctionDefAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionDefAccess().getBodyCommandParserRuleCall_5_2_0());
					}
					lv_body_7_0=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionDefRule());
						}
						add(
							$current,
							"body",
							lv_body_7_0,
							"robotScript.RobotScript.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getFunctionDefAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionDefAccess().getBodyCommandParserRuleCall_5_3_1_0());
						}
						lv_body_9_0=ruleCommand
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionDefRule());
							}
							add(
								$current,
								"body",
								lv_body_9_0,
								"robotScript.RobotScript.Command");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getFunctionDefAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		(
			otherlv_11='inputs'
			{
				newLeafNode(otherlv_11, grammarAccess.getFunctionDefAccess().getInputsKeyword_6_0());
			}
			otherlv_12='{'
			{
				newLeafNode(otherlv_12, grammarAccess.getFunctionDefAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionDefAccess().getInputsVarDeclParserRuleCall_6_2_0());
					}
					lv_inputs_13_0=ruleVarDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionDefRule());
						}
						add(
							$current,
							"inputs",
							lv_inputs_13_0,
							"robotScript.RobotScript.VarDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getFunctionDefAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionDefAccess().getInputsVarDeclParserRuleCall_6_3_1_0());
						}
						lv_inputs_15_0=ruleVarDecl
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionDefRule());
							}
							add(
								$current,
								"inputs",
								lv_inputs_15_0,
								"robotScript.RobotScript.VarDecl");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16='}'
			{
				newLeafNode(otherlv_16, grammarAccess.getFunctionDefAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getFunctionDefAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleVarDecl
entryRuleVarDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarDeclRule()); }
	iv_ruleVarDecl=ruleVarDecl
	{ $current=$iv_ruleVarDecl.current; }
	EOF;

// Rule VarDecl
ruleVarDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='VarDecl'
		{
			newLeafNode(otherlv_0, grammarAccess.getVarDeclAccess().getVarDeclKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVarDeclAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarDeclRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"robotScript.RobotScript.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getVarDeclAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='type'
		{
			newLeafNode(otherlv_3, grammarAccess.getVarDeclAccess().getTypeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVarDeclAccess().getTypeDataTypeParserRuleCall_4_0());
				}
				lv_type_4_0=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarDeclRule());
					}
					set(
						$current,
						"type",
						lv_type_4_0,
						"robotScript.RobotScript.DataType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getVarDeclAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleVoidType
entryRuleVoidType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVoidTypeRule()); }
	iv_ruleVoidType=ruleVoidType
	{ $current=$iv_ruleVoidType.current; }
	EOF;

// Rule VoidType
ruleVoidType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVoidTypeAccess().getVoidTypeAction_0(),
					$current);
			}
		)
		otherlv_1='VoidType'
		{
			newLeafNode(otherlv_1, grammarAccess.getVoidTypeAccess().getVoidTypeKeyword_1());
		}
	)
;

// Entry rule entryRuleNumberType
entryRuleNumberType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberTypeRule()); }
	iv_ruleNumberType=ruleNumberType
	{ $current=$iv_ruleNumberType.current; }
	EOF;

// Rule NumberType
ruleNumberType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNumberTypeAccess().getNumberTypeAction_0(),
					$current);
			}
		)
		otherlv_1='NumberType'
		{
			newLeafNode(otherlv_1, grammarAccess.getNumberTypeAccess().getNumberTypeKeyword_1());
		}
	)
;

// Entry rule entryRuleBooleanType
entryRuleBooleanType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanTypeRule()); }
	iv_ruleBooleanType=ruleBooleanType
	{ $current=$iv_ruleBooleanType.current; }
	EOF;

// Rule BooleanType
ruleBooleanType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBooleanTypeAccess().getBooleanTypeAction_0(),
					$current);
			}
		)
		otherlv_1='BooleanType'
		{
			newLeafNode(otherlv_1, grammarAccess.getBooleanTypeAccess().getBooleanTypeKeyword_1());
		}
	)
;

// Entry rule entryRuleLoop
entryRuleLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopRule()); }
	iv_ruleLoop=ruleLoop
	{ $current=$iv_ruleLoop.current; }
	EOF;

// Rule Loop
ruleLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Loop'
		{
			newLeafNode(otherlv_0, grammarAccess.getLoopAccess().getLoopKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLoopAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='body'
			{
				newLeafNode(otherlv_2, grammarAccess.getLoopAccess().getBodyKeyword_2_0());
			}
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getLoopAccess().getLeftCurlyBracketKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLoopAccess().getBodyCommandParserRuleCall_2_2_0());
					}
					lv_body_4_0=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLoopRule());
						}
						add(
							$current,
							"body",
							lv_body_4_0,
							"robotScript.RobotScript.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getLoopAccess().getCommaKeyword_2_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLoopAccess().getBodyCommandParserRuleCall_2_3_1_0());
						}
						lv_body_6_0=ruleCommand
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLoopRule());
							}
							add(
								$current,
								"body",
								lv_body_6_0,
								"robotScript.RobotScript.Command");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getLoopAccess().getRightCurlyBracketKeyword_2_4());
			}
		)?
		otherlv_8='cond'
		{
			newLeafNode(otherlv_8, grammarAccess.getLoopAccess().getCondKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopAccess().getCondExpressionParserRuleCall_4_0());
				}
				lv_cond_9_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopRule());
					}
					set(
						$current,
						"cond",
						lv_cond_9_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getLoopAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleIf_Impl
entryRuleIf_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIf_ImplRule()); }
	iv_ruleIf_Impl=ruleIf_Impl
	{ $current=$iv_ruleIf_Impl.current; }
	EOF;

// Rule If_Impl
ruleIf_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='If'
		{
			newLeafNode(otherlv_0, grammarAccess.getIf_ImplAccess().getIfKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getIf_ImplAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='body'
			{
				newLeafNode(otherlv_2, grammarAccess.getIf_ImplAccess().getBodyKeyword_2_0());
			}
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getIf_ImplAccess().getLeftCurlyBracketKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIf_ImplAccess().getBodyCommandParserRuleCall_2_2_0());
					}
					lv_body_4_0=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIf_ImplRule());
						}
						add(
							$current,
							"body",
							lv_body_4_0,
							"robotScript.RobotScript.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getIf_ImplAccess().getCommaKeyword_2_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getIf_ImplAccess().getBodyCommandParserRuleCall_2_3_1_0());
						}
						lv_body_6_0=ruleCommand
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIf_ImplRule());
							}
							add(
								$current,
								"body",
								lv_body_6_0,
								"robotScript.RobotScript.Command");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getIf_ImplAccess().getRightCurlyBracketKeyword_2_4());
			}
		)?
		otherlv_8='cond'
		{
			newLeafNode(otherlv_8, grammarAccess.getIf_ImplAccess().getCondKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIf_ImplAccess().getCondExpressionParserRuleCall_4_0());
				}
				lv_cond_9_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIf_ImplRule());
					}
					set(
						$current,
						"cond",
						lv_cond_9_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getIf_ImplAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleIfElse
entryRuleIfElse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfElseRule()); }
	iv_ruleIfElse=ruleIfElse
	{ $current=$iv_ruleIfElse.current; }
	EOF;

// Rule IfElse
ruleIfElse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='IfElse'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfElseAccess().getIfElseKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getIfElseAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='body'
			{
				newLeafNode(otherlv_2, grammarAccess.getIfElseAccess().getBodyKeyword_2_0());
			}
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getIfElseAccess().getLeftCurlyBracketKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfElseAccess().getBodyCommandParserRuleCall_2_2_0());
					}
					lv_body_4_0=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfElseRule());
						}
						add(
							$current,
							"body",
							lv_body_4_0,
							"robotScript.RobotScript.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getIfElseAccess().getCommaKeyword_2_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getIfElseAccess().getBodyCommandParserRuleCall_2_3_1_0());
						}
						lv_body_6_0=ruleCommand
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIfElseRule());
							}
							add(
								$current,
								"body",
								lv_body_6_0,
								"robotScript.RobotScript.Command");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getIfElseAccess().getRightCurlyBracketKeyword_2_4());
			}
		)?
		otherlv_8='cond'
		{
			newLeafNode(otherlv_8, grammarAccess.getIfElseAccess().getCondKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfElseAccess().getCondExpressionParserRuleCall_4_0());
				}
				lv_cond_9_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfElseRule());
					}
					set(
						$current,
						"cond",
						lv_cond_9_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10='bodyElse'
			{
				newLeafNode(otherlv_10, grammarAccess.getIfElseAccess().getBodyElseKeyword_5_0());
			}
			otherlv_11='{'
			{
				newLeafNode(otherlv_11, grammarAccess.getIfElseAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfElseAccess().getBodyElseCommandParserRuleCall_5_2_0());
					}
					lv_bodyElse_12_0=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfElseRule());
						}
						add(
							$current,
							"bodyElse",
							lv_bodyElse_12_0,
							"robotScript.RobotScript.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getIfElseAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getIfElseAccess().getBodyElseCommandParserRuleCall_5_3_1_0());
						}
						lv_bodyElse_14_0=ruleCommand
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIfElseRule());
							}
							add(
								$current,
								"bodyElse",
								lv_bodyElse_14_0,
								"robotScript.RobotScript.Command");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getIfElseAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getIfElseAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleAssignAtDecl
entryRuleAssignAtDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignAtDeclRule()); }
	iv_ruleAssignAtDecl=ruleAssignAtDecl
	{ $current=$iv_ruleAssignAtDecl.current; }
	EOF;

// Rule AssignAtDecl
ruleAssignAtDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AssignAtDecl'
		{
			newLeafNode(otherlv_0, grammarAccess.getAssignAtDeclAccess().getAssignAtDeclKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAssignAtDeclAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='expression'
		{
			newLeafNode(otherlv_2, grammarAccess.getAssignAtDeclAccess().getExpressionKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignAtDeclAccess().getExpressionExpressionParserRuleCall_3_0());
				}
				lv_expression_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignAtDeclRule());
					}
					set(
						$current,
						"expression",
						lv_expression_3_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='vardecl'
		{
			newLeafNode(otherlv_4, grammarAccess.getAssignAtDeclAccess().getVardeclKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignAtDeclAccess().getVardeclVarDeclParserRuleCall_5_0());
				}
				lv_vardecl_5_0=ruleVarDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignAtDeclRule());
					}
					set(
						$current,
						"vardecl",
						lv_vardecl_5_0,
						"robotScript.RobotScript.VarDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getAssignAtDeclAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleReAssign
entryRuleReAssign returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReAssignRule()); }
	iv_ruleReAssign=ruleReAssign
	{ $current=$iv_ruleReAssign.current; }
	EOF;

// Rule ReAssign
ruleReAssign returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ReAssign'
		{
			newLeafNode(otherlv_0, grammarAccess.getReAssignAccess().getReAssignKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getReAssignAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='var'
		{
			newLeafNode(otherlv_2, grammarAccess.getReAssignAccess().getVarKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReAssignRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getReAssignAccess().getVarVarDeclCrossReference_3_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='expression'
		{
			newLeafNode(otherlv_4, grammarAccess.getReAssignAccess().getExpressionKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReAssignAccess().getExpressionExpressionParserRuleCall_5_0());
				}
				lv_expression_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReAssignRule());
					}
					set(
						$current,
						"expression",
						lv_expression_5_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getReAssignAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleSetSpeed
entryRuleSetSpeed returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetSpeedRule()); }
	iv_ruleSetSpeed=ruleSetSpeed
	{ $current=$iv_ruleSetSpeed.current; }
	EOF;

// Rule SetSpeed
ruleSetSpeed returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SetSpeed'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetSpeedAccess().getSetSpeedKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSetSpeedAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='unit'
			{
				newLeafNode(otherlv_2, grammarAccess.getSetSpeedAccess().getUnitKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSetSpeedAccess().getUnitUnitEnumRuleCall_2_1_0());
					}
					lv_unit_3_0=ruleUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetSpeedRule());
						}
						set(
							$current,
							"unit",
							lv_unit_3_0,
							"robotScript.RobotScript.Unit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='speedstate'
		{
			newLeafNode(otherlv_4, grammarAccess.getSetSpeedAccess().getSpeedstateKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSetSpeedRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSetSpeedAccess().getSpeedstateSpeedStateCrossReference_4_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='expression'
		{
			newLeafNode(otherlv_6, grammarAccess.getSetSpeedAccess().getExpressionKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetSpeedAccess().getExpressionExpressionParserRuleCall_6_0());
				}
				lv_expression_7_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetSpeedRule());
					}
					set(
						$current,
						"expression",
						lv_expression_7_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getSetSpeedAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleRotation
entryRuleRotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRotationRule()); }
	iv_ruleRotation=ruleRotation
	{ $current=$iv_ruleRotation.current; }
	EOF;

// Rule Rotation
ruleRotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Rotation'
		{
			newLeafNode(otherlv_0, grammarAccess.getRotationAccess().getRotationKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRotationAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='expression'
		{
			newLeafNode(otherlv_2, grammarAccess.getRotationAccess().getExpressionKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRotationAccess().getExpressionExpressionParserRuleCall_3_0());
				}
				lv_expression_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRotationRule());
					}
					set(
						$current,
						"expression",
						lv_expression_3_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getRotationAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleFront
entryRuleFront returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFrontRule()); }
	iv_ruleFront=ruleFront
	{ $current=$iv_ruleFront.current; }
	EOF;

// Rule Front
ruleFront returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Front'
		{
			newLeafNode(otherlv_0, grammarAccess.getFrontAccess().getFrontKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getFrontAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='unit'
			{
				newLeafNode(otherlv_2, grammarAccess.getFrontAccess().getUnitKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFrontAccess().getUnitUnitEnumRuleCall_2_1_0());
					}
					lv_unit_3_0=ruleUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFrontRule());
						}
						set(
							$current,
							"unit",
							lv_unit_3_0,
							"robotScript.RobotScript.Unit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='expression'
		{
			newLeafNode(otherlv_4, grammarAccess.getFrontAccess().getExpressionKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFrontAccess().getExpressionExpressionParserRuleCall_4_0());
				}
				lv_expression_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFrontRule());
					}
					set(
						$current,
						"expression",
						lv_expression_5_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getFrontAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleBack
entryRuleBack returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBackRule()); }
	iv_ruleBack=ruleBack
	{ $current=$iv_ruleBack.current; }
	EOF;

// Rule Back
ruleBack returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Back'
		{
			newLeafNode(otherlv_0, grammarAccess.getBackAccess().getBackKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getBackAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='unit'
			{
				newLeafNode(otherlv_2, grammarAccess.getBackAccess().getUnitKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBackAccess().getUnitUnitEnumRuleCall_2_1_0());
					}
					lv_unit_3_0=ruleUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBackRule());
						}
						set(
							$current,
							"unit",
							lv_unit_3_0,
							"robotScript.RobotScript.Unit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='expression'
		{
			newLeafNode(otherlv_4, grammarAccess.getBackAccess().getExpressionKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBackAccess().getExpressionExpressionParserRuleCall_4_0());
				}
				lv_expression_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBackRule());
					}
					set(
						$current,
						"expression",
						lv_expression_5_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getBackAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleRight
entryRuleRight returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRightRule()); }
	iv_ruleRight=ruleRight
	{ $current=$iv_ruleRight.current; }
	EOF;

// Rule Right
ruleRight returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Right'
		{
			newLeafNode(otherlv_0, grammarAccess.getRightAccess().getRightKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRightAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='unit'
			{
				newLeafNode(otherlv_2, grammarAccess.getRightAccess().getUnitKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRightAccess().getUnitUnitEnumRuleCall_2_1_0());
					}
					lv_unit_3_0=ruleUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRightRule());
						}
						set(
							$current,
							"unit",
							lv_unit_3_0,
							"robotScript.RobotScript.Unit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='expression'
		{
			newLeafNode(otherlv_4, grammarAccess.getRightAccess().getExpressionKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRightAccess().getExpressionExpressionParserRuleCall_4_0());
				}
				lv_expression_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRightRule());
					}
					set(
						$current,
						"expression",
						lv_expression_5_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getRightAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleLeft
entryRuleLeft returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLeftRule()); }
	iv_ruleLeft=ruleLeft
	{ $current=$iv_ruleLeft.current; }
	EOF;

// Rule Left
ruleLeft returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Left'
		{
			newLeafNode(otherlv_0, grammarAccess.getLeftAccess().getLeftKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLeftAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='unit'
			{
				newLeafNode(otherlv_2, grammarAccess.getLeftAccess().getUnitKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLeftAccess().getUnitUnitEnumRuleCall_2_1_0());
					}
					lv_unit_3_0=ruleUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLeftRule());
						}
						set(
							$current,
							"unit",
							lv_unit_3_0,
							"robotScript.RobotScript.Unit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='expression'
		{
			newLeafNode(otherlv_4, grammarAccess.getLeftAccess().getExpressionKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLeftAccess().getExpressionExpressionParserRuleCall_4_0());
				}
				lv_expression_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLeftRule());
					}
					set(
						$current,
						"expression",
						lv_expression_5_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getLeftAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleFunCall
entryRuleFunCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunCallRule()); }
	iv_ruleFunCall=ruleFunCall
	{ $current=$iv_ruleFunCall.current; }
	EOF;

// Rule FunCall
ruleFunCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FunCall'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunCallAccess().getFunCallKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getFunCallAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='fun'
		{
			newLeafNode(otherlv_2, grammarAccess.getFunCallAccess().getFunKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunCallRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFunCallAccess().getFunFunctionDefCrossReference_3_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='inputs'
			{
				newLeafNode(otherlv_4, grammarAccess.getFunCallAccess().getInputsKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getFunCallAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunCallAccess().getInputsExpressionParserRuleCall_4_2_0());
					}
					lv_inputs_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunCallRule());
						}
						add(
							$current,
							"inputs",
							lv_inputs_6_0,
							"robotScript.RobotScript.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getFunCallAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunCallAccess().getInputsExpressionParserRuleCall_4_3_1_0());
						}
						lv_inputs_8_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunCallRule());
							}
							add(
								$current,
								"inputs",
								lv_inputs_8_0,
								"robotScript.RobotScript.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getFunCallAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getFunCallAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleNeg
entryRuleNeg returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNegRule()); }
	iv_ruleNeg=ruleNeg
	{ $current=$iv_ruleNeg.current; }
	EOF;

// Rule Neg
ruleNeg returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Neg'
		{
			newLeafNode(otherlv_0, grammarAccess.getNegAccess().getNegKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getNegAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='op'
		{
			newLeafNode(otherlv_2, grammarAccess.getNegAccess().getOpKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNegAccess().getOpExpressionParserRuleCall_3_0());
				}
				lv_op_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNegRule());
					}
					set(
						$current,
						"op",
						lv_op_3_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getNegAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleNot
entryRuleNot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotRule()); }
	iv_ruleNot=ruleNot
	{ $current=$iv_ruleNot.current; }
	EOF;

// Rule Not
ruleNot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Not'
		{
			newLeafNode(otherlv_0, grammarAccess.getNotAccess().getNotKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getNotAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='op'
		{
			newLeafNode(otherlv_2, grammarAccess.getNotAccess().getOpKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNotAccess().getOpExpressionParserRuleCall_3_0());
				}
				lv_op_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNotRule());
					}
					set(
						$current,
						"op",
						lv_op_3_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getNotAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleGreater
entryRuleGreater returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGreaterRule()); }
	iv_ruleGreater=ruleGreater
	{ $current=$iv_ruleGreater.current; }
	EOF;

// Rule Greater
ruleGreater returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Greater'
		{
			newLeafNode(otherlv_0, grammarAccess.getGreaterAccess().getGreaterKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getGreaterAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='rightOp'
		{
			newLeafNode(otherlv_2, grammarAccess.getGreaterAccess().getRightOpKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGreaterAccess().getRightOpExpressionParserRuleCall_3_0());
				}
				lv_rightOp_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGreaterRule());
					}
					set(
						$current,
						"rightOp",
						lv_rightOp_3_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='leftOp'
		{
			newLeafNode(otherlv_4, grammarAccess.getGreaterAccess().getLeftOpKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGreaterAccess().getLeftOpExpressionParserRuleCall_5_0());
				}
				lv_leftOp_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGreaterRule());
					}
					set(
						$current,
						"leftOp",
						lv_leftOp_5_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getGreaterAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	iv_ruleAnd=ruleAnd
	{ $current=$iv_ruleAnd.current; }
	EOF;

// Rule And
ruleAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='And'
		{
			newLeafNode(otherlv_0, grammarAccess.getAndAccess().getAndKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAndAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='rightOp'
		{
			newLeafNode(otherlv_2, grammarAccess.getAndAccess().getRightOpKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAndAccess().getRightOpExpressionParserRuleCall_3_0());
				}
				lv_rightOp_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndRule());
					}
					set(
						$current,
						"rightOp",
						lv_rightOp_3_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='leftOp'
		{
			newLeafNode(otherlv_4, grammarAccess.getAndAccess().getLeftOpKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAndAccess().getLeftOpExpressionParserRuleCall_5_0());
				}
				lv_leftOp_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndRule());
					}
					set(
						$current,
						"leftOp",
						lv_leftOp_5_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getAndAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleAdd
entryRuleAdd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddRule()); }
	iv_ruleAdd=ruleAdd
	{ $current=$iv_ruleAdd.current; }
	EOF;

// Rule Add
ruleAdd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Add'
		{
			newLeafNode(otherlv_0, grammarAccess.getAddAccess().getAddKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAddAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='rightOp'
		{
			newLeafNode(otherlv_2, grammarAccess.getAddAccess().getRightOpKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAddAccess().getRightOpExpressionParserRuleCall_3_0());
				}
				lv_rightOp_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddRule());
					}
					set(
						$current,
						"rightOp",
						lv_rightOp_3_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='leftOp'
		{
			newLeafNode(otherlv_4, grammarAccess.getAddAccess().getLeftOpKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAddAccess().getLeftOpExpressionParserRuleCall_5_0());
				}
				lv_leftOp_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddRule());
					}
					set(
						$current,
						"leftOp",
						lv_leftOp_5_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getAddAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleLess
entryRuleLess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLessRule()); }
	iv_ruleLess=ruleLess
	{ $current=$iv_ruleLess.current; }
	EOF;

// Rule Less
ruleLess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Less'
		{
			newLeafNode(otherlv_0, grammarAccess.getLessAccess().getLessKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLessAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='rightOp'
		{
			newLeafNode(otherlv_2, grammarAccess.getLessAccess().getRightOpKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLessAccess().getRightOpExpressionParserRuleCall_3_0());
				}
				lv_rightOp_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLessRule());
					}
					set(
						$current,
						"rightOp",
						lv_rightOp_3_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='leftOp'
		{
			newLeafNode(otherlv_4, grammarAccess.getLessAccess().getLeftOpKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLessAccess().getLeftOpExpressionParserRuleCall_5_0());
				}
				lv_leftOp_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLessRule());
					}
					set(
						$current,
						"leftOp",
						lv_leftOp_5_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getLessAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleOr
entryRuleOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrRule()); }
	iv_ruleOr=ruleOr
	{ $current=$iv_ruleOr.current; }
	EOF;

// Rule Or
ruleOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Or'
		{
			newLeafNode(otherlv_0, grammarAccess.getOrAccess().getOrKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getOrAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='rightOp'
		{
			newLeafNode(otherlv_2, grammarAccess.getOrAccess().getRightOpKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrAccess().getRightOpExpressionParserRuleCall_3_0());
				}
				lv_rightOp_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrRule());
					}
					set(
						$current,
						"rightOp",
						lv_rightOp_3_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='leftOp'
		{
			newLeafNode(otherlv_4, grammarAccess.getOrAccess().getLeftOpKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrAccess().getLeftOpExpressionParserRuleCall_5_0());
				}
				lv_leftOp_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrRule());
					}
					set(
						$current,
						"leftOp",
						lv_leftOp_5_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getOrAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleSub
entryRuleSub returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubRule()); }
	iv_ruleSub=ruleSub
	{ $current=$iv_ruleSub.current; }
	EOF;

// Rule Sub
ruleSub returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Sub'
		{
			newLeafNode(otherlv_0, grammarAccess.getSubAccess().getSubKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSubAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='rightOp'
		{
			newLeafNode(otherlv_2, grammarAccess.getSubAccess().getRightOpKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubAccess().getRightOpExpressionParserRuleCall_3_0());
				}
				lv_rightOp_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubRule());
					}
					set(
						$current,
						"rightOp",
						lv_rightOp_3_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='leftOp'
		{
			newLeafNode(otherlv_4, grammarAccess.getSubAccess().getLeftOpKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubAccess().getLeftOpExpressionParserRuleCall_5_0());
				}
				lv_leftOp_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubRule());
					}
					set(
						$current,
						"leftOp",
						lv_leftOp_5_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getSubAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleGEq
entryRuleGEq returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGEqRule()); }
	iv_ruleGEq=ruleGEq
	{ $current=$iv_ruleGEq.current; }
	EOF;

// Rule GEq
ruleGEq returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='GEq'
		{
			newLeafNode(otherlv_0, grammarAccess.getGEqAccess().getGEqKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getGEqAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='rightOp'
		{
			newLeafNode(otherlv_2, grammarAccess.getGEqAccess().getRightOpKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGEqAccess().getRightOpExpressionParserRuleCall_3_0());
				}
				lv_rightOp_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGEqRule());
					}
					set(
						$current,
						"rightOp",
						lv_rightOp_3_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='leftOp'
		{
			newLeafNode(otherlv_4, grammarAccess.getGEqAccess().getLeftOpKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGEqAccess().getLeftOpExpressionParserRuleCall_5_0());
				}
				lv_leftOp_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGEqRule());
					}
					set(
						$current,
						"leftOp",
						lv_leftOp_5_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getGEqAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleEqu
entryRuleEqu returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEquRule()); }
	iv_ruleEqu=ruleEqu
	{ $current=$iv_ruleEqu.current; }
	EOF;

// Rule Equ
ruleEqu returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Equ'
		{
			newLeafNode(otherlv_0, grammarAccess.getEquAccess().getEquKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getEquAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='rightOp'
		{
			newLeafNode(otherlv_2, grammarAccess.getEquAccess().getRightOpKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEquAccess().getRightOpExpressionParserRuleCall_3_0());
				}
				lv_rightOp_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEquRule());
					}
					set(
						$current,
						"rightOp",
						lv_rightOp_3_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='leftOp'
		{
			newLeafNode(otherlv_4, grammarAccess.getEquAccess().getLeftOpKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEquAccess().getLeftOpExpressionParserRuleCall_5_0());
				}
				lv_leftOp_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEquRule());
					}
					set(
						$current,
						"leftOp",
						lv_leftOp_5_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getEquAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleMul
entryRuleMul returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMulRule()); }
	iv_ruleMul=ruleMul
	{ $current=$iv_ruleMul.current; }
	EOF;

// Rule Mul
ruleMul returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Mul'
		{
			newLeafNode(otherlv_0, grammarAccess.getMulAccess().getMulKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMulAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='rightOp'
		{
			newLeafNode(otherlv_2, grammarAccess.getMulAccess().getRightOpKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMulAccess().getRightOpExpressionParserRuleCall_3_0());
				}
				lv_rightOp_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMulRule());
					}
					set(
						$current,
						"rightOp",
						lv_rightOp_3_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='leftOp'
		{
			newLeafNode(otherlv_4, grammarAccess.getMulAccess().getLeftOpKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMulAccess().getLeftOpExpressionParserRuleCall_5_0());
				}
				lv_leftOp_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMulRule());
					}
					set(
						$current,
						"leftOp",
						lv_leftOp_5_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getMulAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleLEq
entryRuleLEq returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLEqRule()); }
	iv_ruleLEq=ruleLEq
	{ $current=$iv_ruleLEq.current; }
	EOF;

// Rule LEq
ruleLEq returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LEq'
		{
			newLeafNode(otherlv_0, grammarAccess.getLEqAccess().getLEqKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLEqAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='rightOp'
		{
			newLeafNode(otherlv_2, grammarAccess.getLEqAccess().getRightOpKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLEqAccess().getRightOpExpressionParserRuleCall_3_0());
				}
				lv_rightOp_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLEqRule());
					}
					set(
						$current,
						"rightOp",
						lv_rightOp_3_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='leftOp'
		{
			newLeafNode(otherlv_4, grammarAccess.getLEqAccess().getLeftOpKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLEqAccess().getLeftOpExpressionParserRuleCall_5_0());
				}
				lv_leftOp_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLEqRule());
					}
					set(
						$current,
						"leftOp",
						lv_leftOp_5_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getLEqAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleNEq
entryRuleNEq returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNEqRule()); }
	iv_ruleNEq=ruleNEq
	{ $current=$iv_ruleNEq.current; }
	EOF;

// Rule NEq
ruleNEq returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='NEq'
		{
			newLeafNode(otherlv_0, grammarAccess.getNEqAccess().getNEqKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getNEqAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='rightOp'
		{
			newLeafNode(otherlv_2, grammarAccess.getNEqAccess().getRightOpKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNEqAccess().getRightOpExpressionParserRuleCall_3_0());
				}
				lv_rightOp_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNEqRule());
					}
					set(
						$current,
						"rightOp",
						lv_rightOp_3_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='leftOp'
		{
			newLeafNode(otherlv_4, grammarAccess.getNEqAccess().getLeftOpKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNEqAccess().getLeftOpExpressionParserRuleCall_5_0());
				}
				lv_leftOp_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNEqRule());
					}
					set(
						$current,
						"leftOp",
						lv_leftOp_5_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getNEqAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDiv
entryRuleDiv returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDivRule()); }
	iv_ruleDiv=ruleDiv
	{ $current=$iv_ruleDiv.current; }
	EOF;

// Rule Div
ruleDiv returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Div'
		{
			newLeafNode(otherlv_0, grammarAccess.getDivAccess().getDivKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDivAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='rightOp'
		{
			newLeafNode(otherlv_2, grammarAccess.getDivAccess().getRightOpKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDivAccess().getRightOpExpressionParserRuleCall_3_0());
				}
				lv_rightOp_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDivRule());
					}
					set(
						$current,
						"rightOp",
						lv_rightOp_3_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='leftOp'
		{
			newLeafNode(otherlv_4, grammarAccess.getDivAccess().getLeftOpKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDivAccess().getLeftOpExpressionParserRuleCall_5_0());
				}
				lv_leftOp_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDivRule());
					}
					set(
						$current,
						"leftOp",
						lv_leftOp_5_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getDivAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleTimeSensor
entryRuleTimeSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeSensorRule()); }
	iv_ruleTimeSensor=ruleTimeSensor
	{ $current=$iv_ruleTimeSensor.current; }
	EOF;

// Rule TimeSensor
ruleTimeSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTimeSensorAccess().getTimeSensorAction_0(),
					$current);
			}
		)
		otherlv_1='TimeSensor'
		{
			newLeafNode(otherlv_1, grammarAccess.getTimeSensorAccess().getTimeSensorKeyword_1());
		}
	)
;

// Entry rule entryRuleDistSensor
entryRuleDistSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDistSensorRule()); }
	iv_ruleDistSensor=ruleDistSensor
	{ $current=$iv_ruleDistSensor.current; }
	EOF;

// Rule DistSensor
ruleDistSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDistSensorAccess().getDistSensorAction_0(),
					$current);
			}
		)
		otherlv_1='DistSensor'
		{
			newLeafNode(otherlv_1, grammarAccess.getDistSensorAccess().getDistSensorKeyword_1());
		}
	)
;

// Entry rule entryRuleBoolLiteral
entryRuleBoolLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoolLiteralRule()); }
	iv_ruleBoolLiteral=ruleBoolLiteral
	{ $current=$iv_ruleBoolLiteral.current; }
	EOF;

// Rule BoolLiteral
ruleBoolLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBoolLiteralAccess().getBoolLiteralAction_0(),
					$current);
			}
		)
		otherlv_1='BoolLiteral'
		{
			newLeafNode(otherlv_1, grammarAccess.getBoolLiteralAccess().getBoolLiteralKeyword_1());
		}
	)
;

// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberLiteralRule()); }
	iv_ruleNumberLiteral=ruleNumberLiteral
	{ $current=$iv_ruleNumberLiteral.current; }
	EOF;

// Rule NumberLiteral
ruleNumberLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNumberLiteralAccess().getNumberLiteralAction_0(),
					$current);
			}
		)
		otherlv_1='NumberLiteral'
		{
			newLeafNode(otherlv_1, grammarAccess.getNumberLiteralAccess().getNumberLiteralKeyword_1());
		}
	)
;

// Entry rule entryRuleSpeedState
entryRuleSpeedState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpeedStateRule()); }
	iv_ruleSpeedState=ruleSpeedState
	{ $current=$iv_ruleSpeedState.current; }
	EOF;

// Rule SpeedState
ruleSpeedState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSpeedStateAccess().getSpeedStateAction_0(),
					$current);
			}
		)
		otherlv_1='SpeedState'
		{
			newLeafNode(otherlv_1, grammarAccess.getSpeedStateAccess().getSpeedStateKeyword_1());
		}
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Variable'
		{
			newLeafNode(otherlv_0, grammarAccess.getVariableAccess().getVariableKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getVariableAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='var'
		{
			newLeafNode(otherlv_2, grammarAccess.getVariableAccess().getVarKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getVariableAccess().getVarVarDeclCrossReference_3_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getVariableAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Rule Unit
ruleUnit returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='M'
			{
				$current = grammarAccess.getUnitAccess().getMEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getUnitAccess().getMEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='DM'
			{
				$current = grammarAccess.getUnitAccess().getDMEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getUnitAccess().getDMEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='CM'
			{
				$current = grammarAccess.getUnitAccess().getCMEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getUnitAccess().getCMEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='MM'
			{
				$current = grammarAccess.getUnitAccess().getMMEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getUnitAccess().getMMEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
