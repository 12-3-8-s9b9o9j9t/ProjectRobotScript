/*
 * generated by Xtext 2.32.0
 */
grammar InternalRobotScript;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package robotScript.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package robotScript.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import robotScript.services.RobotScriptGrammarAccess;

}

@parser::members {

 	private RobotScriptGrammarAccess grammarAccess;

    public InternalRobotScriptParser(TokenStream input, RobotScriptGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected RobotScriptGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getModelAccess().getModelAction_0(),
					$current);
			}
		)
		otherlv_1='Model'
		{
			newLeafNode(otherlv_1, grammarAccess.getModelAccess().getModelKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='command'
			{
				newLeafNode(otherlv_3, grammarAccess.getModelAccess().getCommandKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getCommandCommandParserRuleCall_3_2_0());
					}
					lv_command_5_0=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"command",
							lv_command_5_0,
							"robotScript.RobotScript.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getModelAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getModelAccess().getCommandCommandParserRuleCall_3_3_1_0());
						}
						lv_command_7_0=ruleCommand
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelRule());
							}
							add(
								$current,
								"command",
								lv_command_7_0,
								"robotScript.RobotScript.Command");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	iv_ruleCommand=ruleCommand
	{ $current=$iv_ruleCommand.current; }
	EOF;

// Rule Command
ruleCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCommandAccess().getRotationParserRuleCall_0());
		}
		this_Rotation_0=ruleRotation
		{
			$current = $this_Rotation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getLinearParserRuleCall_1());
		}
		this_Linear_1=ruleLinear
		{
			$current = $this_Linear_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getClockParserRuleCall_2());
		}
		this_Clock_2=ruleClock
		{
			$current = $this_Clock_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getUltraSoundParserRuleCall_3());
		}
		this_UltraSound_3=ruleUltraSound
		{
			$current = $this_UltraSound_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getSpeedParserRuleCall_4());
		}
		this_Speed_4=ruleSpeed
		{
			$current = $this_Speed_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getLoopParserRuleCall_5());
		}
		this_Loop_5=ruleLoop
		{
			$current = $this_Loop_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getSwitchParserRuleCall_6());
		}
		this_Switch_6=ruleSwitch
		{
			$current = $this_Switch_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getDefVarParserRuleCall_7());
		}
		this_DefVar_7=ruleDefVar
		{
			$current = $this_DefVar_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBoolean
entryRuleBoolean returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanRule()); }
	iv_ruleBoolean=ruleBoolean
	{ $current=$iv_ruleBoolean.current; }
	EOF;

// Rule Boolean
ruleBoolean returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBooleanAccess().getBoolVariablesParserRuleCall_0());
		}
		this_BoolVariables_0=ruleBoolVariables
		{
			$current = $this_BoolVariables_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanAccess().getAndParserRuleCall_1());
		}
		this_And_1=ruleAnd
		{
			$current = $this_And_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanAccess().getOrParserRuleCall_2());
		}
		this_Or_2=ruleOr
		{
			$current = $this_Or_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanAccess().getNotParserRuleCall_3());
		}
		this_Not_3=ruleNot
		{
			$current = $this_Not_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanAccess().getBoolLiteralParserRuleCall_4());
		}
		this_BoolLiteral_4=ruleBoolLiteral
		{
			$current = $this_BoolLiteral_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpressions
entryRuleExpressions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionsRule()); }
	iv_ruleExpressions=ruleExpressions
	{ $current=$iv_ruleExpressions.current; }
	EOF;

// Rule Expressions
ruleExpressions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionsAccess().getBoolVariablesParserRuleCall_0());
		}
		this_BoolVariables_0=ruleBoolVariables
		{
			$current = $this_BoolVariables_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionsAccess().getAndParserRuleCall_1());
		}
		this_And_1=ruleAnd
		{
			$current = $this_And_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionsAccess().getOrParserRuleCall_2());
		}
		this_Or_2=ruleOr
		{
			$current = $this_Or_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionsAccess().getNotParserRuleCall_3());
		}
		this_Not_3=ruleNot
		{
			$current = $this_Not_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionsAccess().getBoolLiteralParserRuleCall_4());
		}
		this_BoolLiteral_4=ruleBoolLiteral
		{
			$current = $this_BoolLiteral_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionsAccess().getAddParserRuleCall_5());
		}
		this_Add_5=ruleAdd
		{
			$current = $this_Add_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionsAccess().getAriLiteralParserRuleCall_6());
		}
		this_AriLiteral_6=ruleAriLiteral
		{
			$current = $this_AriLiteral_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionsAccess().getAriVariablesParserRuleCall_7());
		}
		this_AriVariables_7=ruleAriVariables
		{
			$current = $this_AriVariables_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionsAccess().getSubParserRuleCall_8());
		}
		this_Sub_8=ruleSub
		{
			$current = $this_Sub_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionsAccess().getNegParserRuleCall_9());
		}
		this_Neg_9=ruleNeg
		{
			$current = $this_Neg_9.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUnits
entryRuleUnits returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitsRule()); }
	iv_ruleUnits=ruleUnits
	{ $current=$iv_ruleUnits.current; }
	EOF;

// Rule Units
ruleUnits returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnitsAccess().getMeterParserRuleCall_0());
		}
		this_Meter_0=ruleMeter
		{
			$current = $this_Meter_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitsAccess().getSecondParserRuleCall_1());
		}
		this_Second_1=ruleSecond
		{
			$current = $this_Second_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitsAccess().getDegreeParserRuleCall_2());
		}
		this_Degree_2=ruleDegree
		{
			$current = $this_Degree_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleArithmetic
entryRuleArithmetic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticRule()); }
	iv_ruleArithmetic=ruleArithmetic
	{ $current=$iv_ruleArithmetic.current; }
	EOF;

// Rule Arithmetic
ruleArithmetic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getArithmeticAccess().getAddParserRuleCall_0());
		}
		this_Add_0=ruleAdd
		{
			$current = $this_Add_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArithmeticAccess().getAriLiteralParserRuleCall_1());
		}
		this_AriLiteral_1=ruleAriLiteral
		{
			$current = $this_AriLiteral_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArithmeticAccess().getAriVariablesParserRuleCall_2());
		}
		this_AriVariables_2=ruleAriVariables
		{
			$current = $this_AriVariables_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArithmeticAccess().getSubParserRuleCall_3());
		}
		this_Sub_3=ruleSub
		{
			$current = $this_Sub_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArithmeticAccess().getNegParserRuleCall_4());
		}
		this_Neg_4=ruleNeg
		{
			$current = $this_Neg_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrefix
entryRulePrefix returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrefixRule()); }
	iv_rulePrefix=rulePrefix
	{ $current=$iv_rulePrefix.current; }
	EOF;

// Rule Prefix
rulePrefix returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrefixAccess().getMiliParserRuleCall_0());
		}
		this_Mili_0=ruleMili
		{
			$current = $this_Mili_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrefixAccess().getCentiParserRuleCall_1());
		}
		this_Centi_1=ruleCenti
		{
			$current = $this_Centi_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRotation
entryRuleRotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRotationRule()); }
	iv_ruleRotation=ruleRotation
	{ $current=$iv_ruleRotation.current; }
	EOF;

// Rule Rotation
ruleRotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Rotation'
		{
			newLeafNode(otherlv_0, grammarAccess.getRotationAccess().getRotationKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRotationAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='defvar'
		{
			newLeafNode(otherlv_2, grammarAccess.getRotationAccess().getDefvarKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getRotationAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRotationAccess().getDefvarCommandParserRuleCall_4_0());
				}
				lv_defvar_4_0=ruleCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRotationRule());
					}
					add(
						$current,
						"defvar",
						lv_defvar_4_0,
						"robotScript.RobotScript.Command");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getRotationAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRotationAccess().getDefvarCommandParserRuleCall_5_1_0());
					}
					lv_defvar_6_0=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRotationRule());
						}
						add(
							$current,
							"defvar",
							lv_defvar_6_0,
							"robotScript.RobotScript.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getRotationAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getRotationAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleLinear
entryRuleLinear returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinearRule()); }
	iv_ruleLinear=ruleLinear
	{ $current=$iv_ruleLinear.current; }
	EOF;

// Rule Linear
ruleLinear returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Linear'
		{
			newLeafNode(otherlv_0, grammarAccess.getLinearAccess().getLinearKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLinearAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='defvar'
		{
			newLeafNode(otherlv_2, grammarAccess.getLinearAccess().getDefvarKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getLinearAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLinearAccess().getDefvarCommandParserRuleCall_4_0());
				}
				lv_defvar_4_0=ruleCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinearRule());
					}
					add(
						$current,
						"defvar",
						lv_defvar_4_0,
						"robotScript.RobotScript.Command");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getLinearAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLinearAccess().getDefvarCommandParserRuleCall_5_1_0());
					}
					lv_defvar_6_0=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinearRule());
						}
						add(
							$current,
							"defvar",
							lv_defvar_6_0,
							"robotScript.RobotScript.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getLinearAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getLinearAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleClock
entryRuleClock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClockRule()); }
	iv_ruleClock=ruleClock
	{ $current=$iv_ruleClock.current; }
	EOF;

// Rule Clock
ruleClock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Clock'
		{
			newLeafNode(otherlv_0, grammarAccess.getClockAccess().getClockKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getClockAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='defvar'
		{
			newLeafNode(otherlv_2, grammarAccess.getClockAccess().getDefvarKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getClockAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClockAccess().getDefvarCommandParserRuleCall_4_0());
				}
				lv_defvar_4_0=ruleCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClockRule());
					}
					add(
						$current,
						"defvar",
						lv_defvar_4_0,
						"robotScript.RobotScript.Command");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getClockAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getClockAccess().getDefvarCommandParserRuleCall_5_1_0());
					}
					lv_defvar_6_0=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClockRule());
						}
						add(
							$current,
							"defvar",
							lv_defvar_6_0,
							"robotScript.RobotScript.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getClockAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getClockAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleUltraSound
entryRuleUltraSound returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUltraSoundRule()); }
	iv_ruleUltraSound=ruleUltraSound
	{ $current=$iv_ruleUltraSound.current; }
	EOF;

// Rule UltraSound
ruleUltraSound returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='UltraSound'
		{
			newLeafNode(otherlv_0, grammarAccess.getUltraSoundAccess().getUltraSoundKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getUltraSoundAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='defvar'
		{
			newLeafNode(otherlv_2, grammarAccess.getUltraSoundAccess().getDefvarKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getUltraSoundAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUltraSoundAccess().getDefvarCommandParserRuleCall_4_0());
				}
				lv_defvar_4_0=ruleCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUltraSoundRule());
					}
					add(
						$current,
						"defvar",
						lv_defvar_4_0,
						"robotScript.RobotScript.Command");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getUltraSoundAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUltraSoundAccess().getDefvarCommandParserRuleCall_5_1_0());
					}
					lv_defvar_6_0=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUltraSoundRule());
						}
						add(
							$current,
							"defvar",
							lv_defvar_6_0,
							"robotScript.RobotScript.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getUltraSoundAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getUltraSoundAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleSpeed
entryRuleSpeed returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpeedRule()); }
	iv_ruleSpeed=ruleSpeed
	{ $current=$iv_ruleSpeed.current; }
	EOF;

// Rule Speed
ruleSpeed returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Speed'
		{
			newLeafNode(otherlv_0, grammarAccess.getSpeedAccess().getSpeedKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSpeedAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='defvar'
		{
			newLeafNode(otherlv_2, grammarAccess.getSpeedAccess().getDefvarKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSpeedAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSpeedAccess().getDefvarCommandParserRuleCall_4_0());
				}
				lv_defvar_4_0=ruleCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpeedRule());
					}
					add(
						$current,
						"defvar",
						lv_defvar_4_0,
						"robotScript.RobotScript.Command");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getSpeedAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSpeedAccess().getDefvarCommandParserRuleCall_5_1_0());
					}
					lv_defvar_6_0=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSpeedRule());
						}
						add(
							$current,
							"defvar",
							lv_defvar_6_0,
							"robotScript.RobotScript.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getSpeedAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getSpeedAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleLoop
entryRuleLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopRule()); }
	iv_ruleLoop=ruleLoop
	{ $current=$iv_ruleLoop.current; }
	EOF;

// Rule Loop
ruleLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Loop'
		{
			newLeafNode(otherlv_0, grammarAccess.getLoopAccess().getLoopKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLoopAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='loopCondition'
		{
			newLeafNode(otherlv_2, grammarAccess.getLoopAccess().getLoopConditionKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopAccess().getLoopConditionBooleanParserRuleCall_3_0());
				}
				lv_loopCondition_3_0=ruleBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopRule());
					}
					set(
						$current,
						"loopCondition",
						lv_loopCondition_3_0,
						"robotScript.RobotScript.Boolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='body'
		{
			newLeafNode(otherlv_4, grammarAccess.getLoopAccess().getBodyKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getLoopAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopAccess().getBodyCommandParserRuleCall_6_0());
				}
				lv_body_6_0=ruleCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopRule());
					}
					add(
						$current,
						"body",
						lv_body_6_0,
						"robotScript.RobotScript.Command");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getLoopAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLoopAccess().getBodyCommandParserRuleCall_7_1_0());
					}
					lv_body_8_0=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLoopRule());
						}
						add(
							$current,
							"body",
							lv_body_8_0,
							"robotScript.RobotScript.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getLoopAccess().getRightCurlyBracketKeyword_8());
		}
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getLoopAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleSwitch
entryRuleSwitch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSwitchRule()); }
	iv_ruleSwitch=ruleSwitch
	{ $current=$iv_ruleSwitch.current; }
	EOF;

// Rule Switch
ruleSwitch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Switch'
		{
			newLeafNode(otherlv_0, grammarAccess.getSwitchAccess().getSwitchKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSwitchAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='switchCondition'
		{
			newLeafNode(otherlv_2, grammarAccess.getSwitchAccess().getSwitchConditionKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchAccess().getSwitchConditionBooleanParserRuleCall_3_0());
				}
				lv_switchCondition_3_0=ruleBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchRule());
					}
					set(
						$current,
						"switchCondition",
						lv_switchCondition_3_0,
						"robotScript.RobotScript.Boolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='body'
		{
			newLeafNode(otherlv_4, grammarAccess.getSwitchAccess().getBodyKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getSwitchAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchAccess().getBodyCommandParserRuleCall_6_0());
				}
				lv_body_6_0=ruleCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchRule());
					}
					add(
						$current,
						"body",
						lv_body_6_0,
						"robotScript.RobotScript.Command");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getSwitchAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSwitchAccess().getBodyCommandParserRuleCall_7_1_0());
					}
					lv_body_8_0=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSwitchRule());
						}
						add(
							$current,
							"body",
							lv_body_8_0,
							"robotScript.RobotScript.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getSwitchAccess().getRightCurlyBracketKeyword_8());
		}
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getSwitchAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleDefVar
entryRuleDefVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefVarRule()); }
	iv_ruleDefVar=ruleDefVar
	{ $current=$iv_ruleDefVar.current; }
	EOF;

// Rule DefVar
ruleDefVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DefVar'
		{
			newLeafNode(otherlv_0, grammarAccess.getDefVarAccess().getDefVarKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefVarAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefVarRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"robotScript.RobotScript.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDefVarAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='expressions'
		{
			newLeafNode(otherlv_3, grammarAccess.getDefVarAccess().getExpressionsKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefVarAccess().getExpressionsExpressionsParserRuleCall_4_0());
				}
				lv_expressions_4_0=ruleExpressions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefVarRule());
					}
					set(
						$current,
						"expressions",
						lv_expressions_4_0,
						"robotScript.RobotScript.Expressions");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='units'
			{
				newLeafNode(otherlv_5, grammarAccess.getDefVarAccess().getUnitsKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDefVarAccess().getUnitsUnitsParserRuleCall_5_1_0());
					}
					lv_units_6_0=ruleUnits
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDefVarRule());
						}
						set(
							$current,
							"units",
							lv_units_6_0,
							"robotScript.RobotScript.Units");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getDefVarAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleBoolVariables
entryRuleBoolVariables returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoolVariablesRule()); }
	iv_ruleBoolVariables=ruleBoolVariables
	{ $current=$iv_ruleBoolVariables.current; }
	EOF;

// Rule BoolVariables
ruleBoolVariables returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='BoolVariables'
		{
			newLeafNode(otherlv_0, grammarAccess.getBoolVariablesAccess().getBoolVariablesKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getBoolVariablesAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='reference'
		{
			newLeafNode(otherlv_2, grammarAccess.getBoolVariablesAccess().getReferenceKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoolVariablesRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getBoolVariablesAccess().getReferenceDefVarCrossReference_3_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getBoolVariablesAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	iv_ruleAnd=ruleAnd
	{ $current=$iv_ruleAnd.current; }
	EOF;

// Rule And
ruleAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='And'
		{
			newLeafNode(otherlv_0, grammarAccess.getAndAccess().getAndKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAndAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='left'
		{
			newLeafNode(otherlv_2, grammarAccess.getAndAccess().getLeftKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAndAccess().getLeftBooleanParserRuleCall_3_0());
				}
				lv_left_3_0=ruleBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndRule());
					}
					set(
						$current,
						"left",
						lv_left_3_0,
						"robotScript.RobotScript.Boolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='right'
		{
			newLeafNode(otherlv_4, grammarAccess.getAndAccess().getRightKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAndAccess().getRightBooleanParserRuleCall_5_0());
				}
				lv_right_5_0=ruleBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndRule());
					}
					set(
						$current,
						"right",
						lv_right_5_0,
						"robotScript.RobotScript.Boolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getAndAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleOr
entryRuleOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrRule()); }
	iv_ruleOr=ruleOr
	{ $current=$iv_ruleOr.current; }
	EOF;

// Rule Or
ruleOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Or'
		{
			newLeafNode(otherlv_0, grammarAccess.getOrAccess().getOrKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getOrAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='left'
		{
			newLeafNode(otherlv_2, grammarAccess.getOrAccess().getLeftKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrAccess().getLeftBooleanParserRuleCall_3_0());
				}
				lv_left_3_0=ruleBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrRule());
					}
					set(
						$current,
						"left",
						lv_left_3_0,
						"robotScript.RobotScript.Boolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='right'
		{
			newLeafNode(otherlv_4, grammarAccess.getOrAccess().getRightKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrAccess().getRightBooleanParserRuleCall_5_0());
				}
				lv_right_5_0=ruleBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrRule());
					}
					set(
						$current,
						"right",
						lv_right_5_0,
						"robotScript.RobotScript.Boolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getOrAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleNot
entryRuleNot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotRule()); }
	iv_ruleNot=ruleNot
	{ $current=$iv_ruleNot.current; }
	EOF;

// Rule Not
ruleNot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Not'
		{
			newLeafNode(otherlv_0, grammarAccess.getNotAccess().getNotKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getNotAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='operand'
		{
			newLeafNode(otherlv_2, grammarAccess.getNotAccess().getOperandKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNotAccess().getOperandBooleanParserRuleCall_3_0());
				}
				lv_operand_3_0=ruleBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNotRule());
					}
					set(
						$current,
						"operand",
						lv_operand_3_0,
						"robotScript.RobotScript.Boolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getNotAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleBoolLiteral
entryRuleBoolLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoolLiteralRule()); }
	iv_ruleBoolLiteral=ruleBoolLiteral
	{ $current=$iv_ruleBoolLiteral.current; }
	EOF;

// Rule BoolLiteral
ruleBoolLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBoolLiteralAccess().getBoolLiteralAction_0(),
					$current);
			}
		)
		otherlv_1='BoolLiteral'
		{
			newLeafNode(otherlv_1, grammarAccess.getBoolLiteralAccess().getBoolLiteralKeyword_1());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleAdd
entryRuleAdd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddRule()); }
	iv_ruleAdd=ruleAdd
	{ $current=$iv_ruleAdd.current; }
	EOF;

// Rule Add
ruleAdd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Add'
		{
			newLeafNode(otherlv_0, grammarAccess.getAddAccess().getAddKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAddAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='right'
		{
			newLeafNode(otherlv_2, grammarAccess.getAddAccess().getRightKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAddAccess().getRightArithmeticParserRuleCall_3_0());
				}
				lv_right_3_0=ruleArithmetic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddRule());
					}
					set(
						$current,
						"right",
						lv_right_3_0,
						"robotScript.RobotScript.Arithmetic");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='left'
		{
			newLeafNode(otherlv_4, grammarAccess.getAddAccess().getLeftKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAddAccess().getLeftArithmeticParserRuleCall_5_0());
				}
				lv_left_5_0=ruleArithmetic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddRule());
					}
					set(
						$current,
						"left",
						lv_left_5_0,
						"robotScript.RobotScript.Arithmetic");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getAddAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleAriLiteral
entryRuleAriLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAriLiteralRule()); }
	iv_ruleAriLiteral=ruleAriLiteral
	{ $current=$iv_ruleAriLiteral.current; }
	EOF;

// Rule AriLiteral
ruleAriLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAriLiteralAccess().getAriLiteralAction_0(),
					$current);
			}
		)
		otherlv_1='AriLiteral'
		{
			newLeafNode(otherlv_1, grammarAccess.getAriLiteralAccess().getAriLiteralKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAriLiteralAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='units'
			{
				newLeafNode(otherlv_3, grammarAccess.getAriLiteralAccess().getUnitsKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAriLiteralAccess().getUnitsUnitsParserRuleCall_3_1_0());
					}
					lv_units_4_0=ruleUnits
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAriLiteralRule());
						}
						set(
							$current,
							"units",
							lv_units_4_0,
							"robotScript.RobotScript.Units");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getAriLiteralAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleAriVariables
entryRuleAriVariables returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAriVariablesRule()); }
	iv_ruleAriVariables=ruleAriVariables
	{ $current=$iv_ruleAriVariables.current; }
	EOF;

// Rule AriVariables
ruleAriVariables returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AriVariables'
		{
			newLeafNode(otherlv_0, grammarAccess.getAriVariablesAccess().getAriVariablesKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAriVariablesAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='reference'
		{
			newLeafNode(otherlv_2, grammarAccess.getAriVariablesAccess().getReferenceKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAriVariablesRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getAriVariablesAccess().getReferenceDefVarCrossReference_3_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getAriVariablesAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSub
entryRuleSub returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubRule()); }
	iv_ruleSub=ruleSub
	{ $current=$iv_ruleSub.current; }
	EOF;

// Rule Sub
ruleSub returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Sub'
		{
			newLeafNode(otherlv_0, grammarAccess.getSubAccess().getSubKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSubAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='right'
		{
			newLeafNode(otherlv_2, grammarAccess.getSubAccess().getRightKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubAccess().getRightArithmeticParserRuleCall_3_0());
				}
				lv_right_3_0=ruleArithmetic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubRule());
					}
					set(
						$current,
						"right",
						lv_right_3_0,
						"robotScript.RobotScript.Arithmetic");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='left'
		{
			newLeafNode(otherlv_4, grammarAccess.getSubAccess().getLeftKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubAccess().getLeftArithmeticParserRuleCall_5_0());
				}
				lv_left_5_0=ruleArithmetic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubRule());
					}
					set(
						$current,
						"left",
						lv_left_5_0,
						"robotScript.RobotScript.Arithmetic");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getSubAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleNeg
entryRuleNeg returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNegRule()); }
	iv_ruleNeg=ruleNeg
	{ $current=$iv_ruleNeg.current; }
	EOF;

// Rule Neg
ruleNeg returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Neg'
		{
			newLeafNode(otherlv_0, grammarAccess.getNegAccess().getNegKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getNegAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='operand'
		{
			newLeafNode(otherlv_2, grammarAccess.getNegAccess().getOperandKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNegAccess().getOperandArithmeticParserRuleCall_3_0());
				}
				lv_operand_3_0=ruleArithmetic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNegRule());
					}
					set(
						$current,
						"operand",
						lv_operand_3_0,
						"robotScript.RobotScript.Arithmetic");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getNegAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleMeter
entryRuleMeter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMeterRule()); }
	iv_ruleMeter=ruleMeter
	{ $current=$iv_ruleMeter.current; }
	EOF;

// Rule Meter
ruleMeter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMeterAccess().getMeterAction_0(),
					$current);
			}
		)
		otherlv_1='Meter'
		{
			newLeafNode(otherlv_1, grammarAccess.getMeterAccess().getMeterKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMeterAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='prefix'
			{
				newLeafNode(otherlv_3, grammarAccess.getMeterAccess().getPrefixKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMeterAccess().getPrefixPrefixParserRuleCall_3_1_0());
					}
					lv_prefix_4_0=rulePrefix
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMeterRule());
						}
						set(
							$current,
							"prefix",
							lv_prefix_4_0,
							"robotScript.RobotScript.Prefix");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getMeterAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSecond
entryRuleSecond returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSecondRule()); }
	iv_ruleSecond=ruleSecond
	{ $current=$iv_ruleSecond.current; }
	EOF;

// Rule Second
ruleSecond returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSecondAccess().getSecondAction_0(),
					$current);
			}
		)
		otherlv_1='Second'
		{
			newLeafNode(otherlv_1, grammarAccess.getSecondAccess().getSecondKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSecondAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='prefix'
			{
				newLeafNode(otherlv_3, grammarAccess.getSecondAccess().getPrefixKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSecondAccess().getPrefixPrefixParserRuleCall_3_1_0());
					}
					lv_prefix_4_0=rulePrefix
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSecondRule());
						}
						set(
							$current,
							"prefix",
							lv_prefix_4_0,
							"robotScript.RobotScript.Prefix");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getSecondAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleDegree
entryRuleDegree returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDegreeRule()); }
	iv_ruleDegree=ruleDegree
	{ $current=$iv_ruleDegree.current; }
	EOF;

// Rule Degree
ruleDegree returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDegreeAccess().getDegreeAction_0(),
					$current);
			}
		)
		otherlv_1='Degree'
		{
			newLeafNode(otherlv_1, grammarAccess.getDegreeAccess().getDegreeKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDegreeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='prefix'
			{
				newLeafNode(otherlv_3, grammarAccess.getDegreeAccess().getPrefixKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDegreeAccess().getPrefixPrefixParserRuleCall_3_1_0());
					}
					lv_prefix_4_0=rulePrefix
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDegreeRule());
						}
						set(
							$current,
							"prefix",
							lv_prefix_4_0,
							"robotScript.RobotScript.Prefix");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getDegreeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleMili
entryRuleMili returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMiliRule()); }
	iv_ruleMili=ruleMili
	{ $current=$iv_ruleMili.current; }
	EOF;

// Rule Mili
ruleMili returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMiliAccess().getMiliAction_0(),
					$current);
			}
		)
		otherlv_1='Mili'
		{
			newLeafNode(otherlv_1, grammarAccess.getMiliAccess().getMiliKeyword_1());
		}
	)
;

// Entry rule entryRuleCenti
entryRuleCenti returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCentiRule()); }
	iv_ruleCenti=ruleCenti
	{ $current=$iv_ruleCenti.current; }
	EOF;

// Rule Centi
ruleCenti returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCentiAccess().getCentiAction_0(),
					$current);
			}
		)
		otherlv_1='Centi'
		{
			newLeafNode(otherlv_1, grammarAccess.getCentiAccess().getCentiKeyword_1());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
