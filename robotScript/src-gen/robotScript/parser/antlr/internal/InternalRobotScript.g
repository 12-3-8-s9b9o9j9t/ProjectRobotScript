/*
 * generated by Xtext 2.32.0
 */
grammar InternalRobotScript;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package robotScript.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package robotScript.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import robotScript.services.RobotScriptGrammarAccess;

}

@parser::members {

 	private RobotScriptGrammarAccess grammarAccess;

    public InternalRobotScriptParser(TokenStream input, RobotScriptGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "EntryPoint";
   	}

   	@Override
   	protected RobotScriptGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleEntryPoint
entryRuleEntryPoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntryPointRule()); }
	iv_ruleEntryPoint=ruleEntryPoint
	{ $current=$iv_ruleEntryPoint.current; }
	EOF;

// Rule EntryPoint
ruleEntryPoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEntryPointAccess().getEntryPointAction_0(),
					$current);
			}
		)
		otherlv_1='EntryPoint'
		{
			newLeafNode(otherlv_1, grammarAccess.getEntryPointAccess().getEntryPointKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEntryPointAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='functions'
			{
				newLeafNode(otherlv_3, grammarAccess.getEntryPointAccess().getFunctionsKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getEntryPointAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntryPointAccess().getFunctionsFunctionDefParserRuleCall_3_2_0());
					}
					lv_functions_5_0=ruleFunctionDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntryPointRule());
						}
						add(
							$current,
							"functions",
							lv_functions_5_0,
							"robotScript.RobotScript.FunctionDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getEntryPointAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEntryPointAccess().getFunctionsFunctionDefParserRuleCall_3_3_1_0());
						}
						lv_functions_7_0=ruleFunctionDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEntryPointRule());
							}
							add(
								$current,
								"functions",
								lv_functions_7_0,
								"robotScript.RobotScript.FunctionDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getEntryPointAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getEntryPointAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleAnyType
entryRuleAnyType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnyTypeRule()); }
	iv_ruleAnyType=ruleAnyType
	{ $current=$iv_ruleAnyType.current; }
	EOF;

// Rule AnyType
ruleAnyType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAnyTypeAccess().getVoidTypeParserRuleCall_0());
		}
		this_VoidType_0=ruleVoidType
		{
			$current = $this_VoidType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAnyTypeAccess().getDataTypeParserRuleCall_1());
		}
		this_DataType_1=ruleDataType
		{
			$current = $this_DataType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStatementAccess().getAssignVarParserRuleCall_0());
		}
		this_AssignVar_0=ruleAssignVar
		{
			$current = $this_AssignVar_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSetSpeedParserRuleCall_1());
		}
		this_SetSpeed_1=ruleSetSpeed
		{
			$current = $this_SetSpeed_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getRotationParserRuleCall_2());
		}
		this_Rotation_2=ruleRotation
		{
			$current = $this_Rotation_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getLinearParserRuleCall_3());
		}
		this_Linear_3=ruleLinear
		{
			$current = $this_Linear_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getFunCallParserRuleCall_4());
		}
		this_FunCall_4=ruleFunCall
		{
			$current = $this_FunCall_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getBlockParserRuleCall_5());
		}
		this_Block_5=ruleBlock
		{
			$current = $this_Block_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSimpleVarDeclParserRuleCall_6());
		}
		this_SimpleVarDecl_6=ruleSimpleVarDecl
		{
			$current = $this_SimpleVarDecl_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getVarDeclInitParserRuleCall_7());
		}
		this_VarDeclInit_7=ruleVarDeclInit
		{
			$current = $this_VarDeclInit_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getLoopStmtParserRuleCall_8());
		}
		this_LoopStmt_8=ruleLoopStmt
		{
			$current = $this_LoopStmt_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getIfStmtParserRuleCall_9());
		}
		this_IfStmt_9=ruleIfStmt
		{
			$current = $this_IfStmt_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getReturnStmtParserRuleCall_10());
		}
		this_ReturnStmt_10=ruleReturnStmt
		{
			$current = $this_ReturnStmt_10.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getAndParserRuleCall_0());
		}
		this_And_0=ruleAnd
		{
			$current = $this_And_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getAddParserRuleCall_1());
		}
		this_Add_1=ruleAdd
		{
			$current = $this_Add_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getOrParserRuleCall_2());
		}
		this_Or_2=ruleOr
		{
			$current = $this_Or_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getSensorParserRuleCall_3());
		}
		this_Sensor_3=ruleSensor
		{
			$current = $this_Sensor_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getLiteralParserRuleCall_4());
		}
		this_Literal_4=ruleLiteral
		{
			$current = $this_Literal_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getSpeedParserRuleCall_5());
		}
		this_Speed_5=ruleSpeed
		{
			$current = $this_Speed_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getVariableParserRuleCall_6());
		}
		this_Variable_6=ruleVariable
		{
			$current = $this_Variable_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getFunCallParserRuleCall_7());
		}
		this_FunCall_7=ruleFunCall
		{
			$current = $this_FunCall_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getNotParserRuleCall_8());
		}
		this_Not_8=ruleNot
		{
			$current = $this_Not_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getCompareParserRuleCall_9());
		}
		this_Compare_9=ruleCompare
		{
			$current = $this_Compare_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getMulParserRuleCall_10());
		}
		this_Mul_10=ruleMul
		{
			$current = $this_Mul_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getAriUnOpParserRuleCall_11());
		}
		this_AriUnOp_11=ruleAriUnOp
		{
			$current = $this_AriUnOp_11.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrimaryBoolExpr
entryRulePrimaryBoolExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryBoolExprRule()); }
	iv_rulePrimaryBoolExpr=rulePrimaryBoolExpr
	{ $current=$iv_rulePrimaryBoolExpr.current; }
	EOF;

// Rule PrimaryBoolExpr
rulePrimaryBoolExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryBoolExprAccess().getNotParserRuleCall_0());
		}
		this_Not_0=ruleNot
		{
			$current = $this_Not_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryBoolExprAccess().getCompareParserRuleCall_1());
		}
		this_Compare_1=ruleCompare
		{
			$current = $this_Compare_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrimaryAriExpr
entryRulePrimaryAriExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryAriExprRule()); }
	iv_rulePrimaryAriExpr=rulePrimaryAriExpr
	{ $current=$iv_rulePrimaryAriExpr.current; }
	EOF;

// Rule PrimaryAriExpr
rulePrimaryAriExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryAriExprAccess().getSensorParserRuleCall_0());
		}
		this_Sensor_0=ruleSensor
		{
			$current = $this_Sensor_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAriExprAccess().getLiteralParserRuleCall_1());
		}
		this_Literal_1=ruleLiteral
		{
			$current = $this_Literal_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAriExprAccess().getSpeedParserRuleCall_2());
		}
		this_Speed_2=ruleSpeed
		{
			$current = $this_Speed_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAriExprAccess().getVariableParserRuleCall_3());
		}
		this_Variable_3=ruleVariable
		{
			$current = $this_Variable_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAriExprAccess().getFunCallParserRuleCall_4());
		}
		this_FunCall_4=ruleFunCall
		{
			$current = $this_FunCall_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAriExprAccess().getAriUnOpParserRuleCall_5());
		}
		this_AriUnOp_5=ruleAriUnOp
		{
			$current = $this_AriUnOp_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFunctionDef
entryRuleFunctionDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionDefRule()); }
	iv_ruleFunctionDef=ruleFunctionDef
	{ $current=$iv_ruleFunctionDef.current; }
	EOF;

// Rule FunctionDef
ruleFunctionDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FunctionDef'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionDefAccess().getFunctionDefKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDefAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDefRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"robotScript.RobotScript.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionDefAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='returnType'
		{
			newLeafNode(otherlv_3, grammarAccess.getFunctionDefAccess().getReturnTypeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDefAccess().getReturnTypeAnyTypeParserRuleCall_4_0());
				}
				lv_returnType_4_0=ruleAnyType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDefRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_4_0,
						"robotScript.RobotScript.AnyType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='block'
		{
			newLeafNode(otherlv_5, grammarAccess.getFunctionDefAccess().getBlockKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDefAccess().getBlockBlockParserRuleCall_6_0());
				}
				lv_block_6_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDefRule());
					}
					set(
						$current,
						"block",
						lv_block_6_0,
						"robotScript.RobotScript.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7='inputs'
			{
				newLeafNode(otherlv_7, grammarAccess.getFunctionDefAccess().getInputsKeyword_7_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getFunctionDefAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionDefAccess().getInputsSimpleVarDeclParserRuleCall_7_2_0());
					}
					lv_inputs_9_0=ruleSimpleVarDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionDefRule());
						}
						add(
							$current,
							"inputs",
							lv_inputs_9_0,
							"robotScript.RobotScript.SimpleVarDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getFunctionDefAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionDefAccess().getInputsSimpleVarDeclParserRuleCall_7_3_1_0());
						}
						lv_inputs_11_0=ruleSimpleVarDecl
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionDefRule());
							}
							add(
								$current,
								"inputs",
								lv_inputs_11_0,
								"robotScript.RobotScript.SimpleVarDecl");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getFunctionDefAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getFunctionDefAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	iv_ruleBlock=ruleBlock
	{ $current=$iv_ruleBlock.current; }
	EOF;

// Rule Block
ruleBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBlockAccess().getBlockAction_0(),
					$current);
			}
		)
		otherlv_1='Block'
		{
			newLeafNode(otherlv_1, grammarAccess.getBlockAccess().getBlockKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='stmts'
			{
				newLeafNode(otherlv_3, grammarAccess.getBlockAccess().getStmtsKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBlockAccess().getStmtsStatementParserRuleCall_3_2_0());
					}
					lv_stmts_5_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBlockRule());
						}
						add(
							$current,
							"stmts",
							lv_stmts_5_0,
							"robotScript.RobotScript.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getBlockAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBlockAccess().getStmtsStatementParserRuleCall_3_3_1_0());
						}
						lv_stmts_7_0=ruleStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBlockRule());
							}
							add(
								$current,
								"stmts",
								lv_stmts_7_0,
								"robotScript.RobotScript.Statement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSimpleVarDecl
entryRuleSimpleVarDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleVarDeclRule()); }
	iv_ruleSimpleVarDecl=ruleSimpleVarDecl
	{ $current=$iv_ruleSimpleVarDecl.current; }
	EOF;

// Rule SimpleVarDecl
ruleSimpleVarDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SimpleVarDecl'
		{
			newLeafNode(otherlv_0, grammarAccess.getSimpleVarDeclAccess().getSimpleVarDeclKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleVarDeclAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleVarDeclRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"robotScript.RobotScript.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSimpleVarDeclAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='type'
		{
			newLeafNode(otherlv_3, grammarAccess.getSimpleVarDeclAccess().getTypeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleVarDeclAccess().getTypeDataTypeParserRuleCall_4_0());
				}
				lv_type_4_0=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleVarDeclRule());
					}
					set(
						$current,
						"type",
						lv_type_4_0,
						"robotScript.RobotScript.DataType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getSimpleVarDeclAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleVoidType
entryRuleVoidType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVoidTypeRule()); }
	iv_ruleVoidType=ruleVoidType
	{ $current=$iv_ruleVoidType.current; }
	EOF;

// Rule VoidType
ruleVoidType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVoidTypeAccess().getVoidTypeAction_0(),
					$current);
			}
		)
		otherlv_1='VoidType'
		{
			newLeafNode(otherlv_1, grammarAccess.getVoidTypeAccess().getVoidTypeKeyword_1());
		}
	)
;

// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	iv_ruleDataType=ruleDataType
	{ $current=$iv_ruleDataType.current; }
	EOF;

// Rule DataType
ruleDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDataTypeAccess().getDataTypeAction_0(),
					$current);
			}
		)
		otherlv_1='DataType'
		{
			newLeafNode(otherlv_1, grammarAccess.getDataTypeAccess().getDataTypeKeyword_1());
		}
	)
;

// Entry rule entryRuleAssignVar
entryRuleAssignVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignVarRule()); }
	iv_ruleAssignVar=ruleAssignVar
	{ $current=$iv_ruleAssignVar.current; }
	EOF;

// Rule AssignVar
ruleAssignVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AssignVar'
		{
			newLeafNode(otherlv_0, grammarAccess.getAssignVarAccess().getAssignVarKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAssignVarAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='var'
		{
			newLeafNode(otherlv_2, grammarAccess.getAssignVarAccess().getVarKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssignVarRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getAssignVarAccess().getVarVarDeclCrossReference_3_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='expr'
		{
			newLeafNode(otherlv_4, grammarAccess.getAssignVarAccess().getExprKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignVarAccess().getExprExpressionParserRuleCall_5_0());
				}
				lv_expr_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignVarRule());
					}
					set(
						$current,
						"expr",
						lv_expr_5_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getAssignVarAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleSetSpeed
entryRuleSetSpeed returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetSpeedRule()); }
	iv_ruleSetSpeed=ruleSetSpeed
	{ $current=$iv_ruleSetSpeed.current; }
	EOF;

// Rule SetSpeed
ruleSetSpeed returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SetSpeed'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetSpeedAccess().getSetSpeedKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSetSpeedAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='unit'
			{
				newLeafNode(otherlv_2, grammarAccess.getSetSpeedAccess().getUnitKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSetSpeedAccess().getUnitUnitEnumRuleCall_2_1_0());
					}
					lv_unit_3_0=ruleUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetSpeedRule());
						}
						set(
							$current,
							"unit",
							lv_unit_3_0,
							"robotScript.RobotScript.Unit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='expr'
		{
			newLeafNode(otherlv_4, grammarAccess.getSetSpeedAccess().getExprKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetSpeedAccess().getExprExpressionParserRuleCall_4_0());
				}
				lv_expr_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetSpeedRule());
					}
					set(
						$current,
						"expr",
						lv_expr_5_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='speed'
		{
			newLeafNode(otherlv_6, grammarAccess.getSetSpeedAccess().getSpeedKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetSpeedAccess().getSpeedSpeedParserRuleCall_6_0());
				}
				lv_speed_7_0=ruleSpeed
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetSpeedRule());
					}
					set(
						$current,
						"speed",
						lv_speed_7_0,
						"robotScript.RobotScript.Speed");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getSetSpeedAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleRotation
entryRuleRotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRotationRule()); }
	iv_ruleRotation=ruleRotation
	{ $current=$iv_ruleRotation.current; }
	EOF;

// Rule Rotation
ruleRotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Rotation'
		{
			newLeafNode(otherlv_0, grammarAccess.getRotationAccess().getRotationKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRotationAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='expr'
		{
			newLeafNode(otherlv_2, grammarAccess.getRotationAccess().getExprKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRotationAccess().getExprExpressionParserRuleCall_3_0());
				}
				lv_expr_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRotationRule());
					}
					set(
						$current,
						"expr",
						lv_expr_3_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getRotationAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleLinear
entryRuleLinear returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinearRule()); }
	iv_ruleLinear=ruleLinear
	{ $current=$iv_ruleLinear.current; }
	EOF;

// Rule Linear
ruleLinear returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Linear'
		{
			newLeafNode(otherlv_0, grammarAccess.getLinearAccess().getLinearKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLinearAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='unit'
			{
				newLeafNode(otherlv_2, grammarAccess.getLinearAccess().getUnitKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLinearAccess().getUnitUnitEnumRuleCall_2_1_0());
					}
					lv_unit_3_0=ruleUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinearRule());
						}
						set(
							$current,
							"unit",
							lv_unit_3_0,
							"robotScript.RobotScript.Unit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='expr'
		{
			newLeafNode(otherlv_4, grammarAccess.getLinearAccess().getExprKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLinearAccess().getExprExpressionParserRuleCall_4_0());
				}
				lv_expr_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinearRule());
					}
					set(
						$current,
						"expr",
						lv_expr_5_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getLinearAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleFunCall
entryRuleFunCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunCallRule()); }
	iv_ruleFunCall=ruleFunCall
	{ $current=$iv_ruleFunCall.current; }
	EOF;

// Rule FunCall
ruleFunCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FunCall'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunCallAccess().getFunCallKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getFunCallAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='fun'
		{
			newLeafNode(otherlv_2, grammarAccess.getFunCallAccess().getFunKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunCallRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFunCallAccess().getFunFunctionDefCrossReference_3_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='inputs'
			{
				newLeafNode(otherlv_4, grammarAccess.getFunCallAccess().getInputsKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getFunCallAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunCallAccess().getInputsExpressionParserRuleCall_4_2_0());
					}
					lv_inputs_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunCallRule());
						}
						add(
							$current,
							"inputs",
							lv_inputs_6_0,
							"robotScript.RobotScript.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getFunCallAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunCallAccess().getInputsExpressionParserRuleCall_4_3_1_0());
						}
						lv_inputs_8_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunCallRule());
							}
							add(
								$current,
								"inputs",
								lv_inputs_8_0,
								"robotScript.RobotScript.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getFunCallAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getFunCallAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleVarDeclInit
entryRuleVarDeclInit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarDeclInitRule()); }
	iv_ruleVarDeclInit=ruleVarDeclInit
	{ $current=$iv_ruleVarDeclInit.current; }
	EOF;

// Rule VarDeclInit
ruleVarDeclInit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='VarDeclInit'
		{
			newLeafNode(otherlv_0, grammarAccess.getVarDeclInitAccess().getVarDeclInitKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVarDeclInitAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarDeclInitRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"robotScript.RobotScript.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getVarDeclInitAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='type'
		{
			newLeafNode(otherlv_3, grammarAccess.getVarDeclInitAccess().getTypeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVarDeclInitAccess().getTypeDataTypeParserRuleCall_4_0());
				}
				lv_type_4_0=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarDeclInitRule());
					}
					set(
						$current,
						"type",
						lv_type_4_0,
						"robotScript.RobotScript.DataType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='expr'
		{
			newLeafNode(otherlv_5, grammarAccess.getVarDeclInitAccess().getExprKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVarDeclInitAccess().getExprExpressionParserRuleCall_6_0());
				}
				lv_expr_6_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarDeclInitRule());
					}
					set(
						$current,
						"expr",
						lv_expr_6_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getVarDeclInitAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleLoopStmt
entryRuleLoopStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopStmtRule()); }
	iv_ruleLoopStmt=ruleLoopStmt
	{ $current=$iv_ruleLoopStmt.current; }
	EOF;

// Rule LoopStmt
ruleLoopStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LoopStmt'
		{
			newLeafNode(otherlv_0, grammarAccess.getLoopStmtAccess().getLoopStmtKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLoopStmtAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='expr'
		{
			newLeafNode(otherlv_2, grammarAccess.getLoopStmtAccess().getExprKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopStmtAccess().getExprExpressionParserRuleCall_3_0());
				}
				lv_expr_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopStmtRule());
					}
					set(
						$current,
						"expr",
						lv_expr_3_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='stmt'
		{
			newLeafNode(otherlv_4, grammarAccess.getLoopStmtAccess().getStmtKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopStmtAccess().getStmtStatementParserRuleCall_5_0());
				}
				lv_stmt_5_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopStmtRule());
					}
					set(
						$current,
						"stmt",
						lv_stmt_5_0,
						"robotScript.RobotScript.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getLoopStmtAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleIfStmt
entryRuleIfStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStmtRule()); }
	iv_ruleIfStmt=ruleIfStmt
	{ $current=$iv_ruleIfStmt.current; }
	EOF;

// Rule IfStmt
ruleIfStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='IfStmt'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfStmtAccess().getIfStmtKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getIfStmtAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='expr'
		{
			newLeafNode(otherlv_2, grammarAccess.getIfStmtAccess().getExprKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStmtAccess().getExprExpressionParserRuleCall_3_0());
				}
				lv_expr_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStmtRule());
					}
					set(
						$current,
						"expr",
						lv_expr_3_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='ifstmt'
		{
			newLeafNode(otherlv_4, grammarAccess.getIfStmtAccess().getIfstmtKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStmtAccess().getIfstmtStatementParserRuleCall_5_0());
				}
				lv_ifstmt_5_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStmtRule());
					}
					set(
						$current,
						"ifstmt",
						lv_ifstmt_5_0,
						"robotScript.RobotScript.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='elsestmt'
			{
				newLeafNode(otherlv_6, grammarAccess.getIfStmtAccess().getElsestmtKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStmtAccess().getElsestmtStatementParserRuleCall_6_1_0());
					}
					lv_elsestmt_7_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStmtRule());
						}
						set(
							$current,
							"elsestmt",
							lv_elsestmt_7_0,
							"robotScript.RobotScript.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getIfStmtAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleReturnStmt
entryRuleReturnStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnStmtRule()); }
	iv_ruleReturnStmt=ruleReturnStmt
	{ $current=$iv_ruleReturnStmt.current; }
	EOF;

// Rule ReturnStmt
ruleReturnStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getReturnStmtAccess().getReturnStmtAction_0(),
					$current);
			}
		)
		otherlv_1='ReturnStmt'
		{
			newLeafNode(otherlv_1, grammarAccess.getReturnStmtAccess().getReturnStmtKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getReturnStmtAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='expr'
			{
				newLeafNode(otherlv_3, grammarAccess.getReturnStmtAccess().getExprKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReturnStmtAccess().getExprExpressionParserRuleCall_3_1_0());
					}
					lv_expr_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReturnStmtRule());
						}
						set(
							$current,
							"expr",
							lv_expr_4_0,
							"robotScript.RobotScript.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getReturnStmtAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	iv_ruleAnd=ruleAnd
	{ $current=$iv_ruleAnd.current; }
	EOF;

// Rule And
ruleAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='And'
		{
			newLeafNode(otherlv_0, grammarAccess.getAndAccess().getAndKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAndAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='exprs'
		{
			newLeafNode(otherlv_2, grammarAccess.getAndAccess().getExprsKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getAndAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAndAccess().getExprsPrimaryBoolExprParserRuleCall_4_0());
				}
				lv_exprs_4_0=rulePrimaryBoolExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndRule());
					}
					add(
						$current,
						"exprs",
						lv_exprs_4_0,
						"robotScript.RobotScript.PrimaryBoolExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getAndAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndAccess().getExprsPrimaryBoolExprParserRuleCall_5_1_0());
					}
					lv_exprs_6_0=rulePrimaryBoolExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndRule());
						}
						add(
							$current,
							"exprs",
							lv_exprs_6_0,
							"robotScript.RobotScript.PrimaryBoolExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getAndAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getAndAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleAdd
entryRuleAdd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddRule()); }
	iv_ruleAdd=ruleAdd
	{ $current=$iv_ruleAdd.current; }
	EOF;

// Rule Add
ruleAdd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Add'
		{
			newLeafNode(otherlv_0, grammarAccess.getAddAccess().getAddKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAddAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='exprs'
		{
			newLeafNode(otherlv_2, grammarAccess.getAddAccess().getExprsKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getAddAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAddAccess().getExprsMulParserRuleCall_4_0());
				}
				lv_exprs_4_0=ruleMul
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddRule());
					}
					add(
						$current,
						"exprs",
						lv_exprs_4_0,
						"robotScript.RobotScript.Mul");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getAddAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAddAccess().getExprsMulParserRuleCall_5_1_0());
					}
					lv_exprs_6_0=ruleMul
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAddRule());
						}
						add(
							$current,
							"exprs",
							lv_exprs_6_0,
							"robotScript.RobotScript.Mul");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getAddAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getAddAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleOr
entryRuleOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrRule()); }
	iv_ruleOr=ruleOr
	{ $current=$iv_ruleOr.current; }
	EOF;

// Rule Or
ruleOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Or'
		{
			newLeafNode(otherlv_0, grammarAccess.getOrAccess().getOrKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getOrAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='exprs'
		{
			newLeafNode(otherlv_2, grammarAccess.getOrAccess().getExprsKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getOrAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrAccess().getExprsAndParserRuleCall_4_0());
				}
				lv_exprs_4_0=ruleAnd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrRule());
					}
					add(
						$current,
						"exprs",
						lv_exprs_4_0,
						"robotScript.RobotScript.And");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getOrAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrAccess().getExprsAndParserRuleCall_5_1_0());
					}
					lv_exprs_6_0=ruleAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrRule());
						}
						add(
							$current,
							"exprs",
							lv_exprs_6_0,
							"robotScript.RobotScript.And");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getOrAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getOrAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleSensor
entryRuleSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorRule()); }
	iv_ruleSensor=ruleSensor
	{ $current=$iv_ruleSensor.current; }
	EOF;

// Rule Sensor
ruleSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSensorAccess().getSensorAction_0(),
					$current);
			}
		)
		otherlv_1='Sensor'
		{
			newLeafNode(otherlv_1, grammarAccess.getSensorAccess().getSensorKeyword_1());
		}
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLiteralAccess().getLiteralAction_0(),
					$current);
			}
		)
		otherlv_1='Literal'
		{
			newLeafNode(otherlv_1, grammarAccess.getLiteralAccess().getLiteralKeyword_1());
		}
	)
;

// Entry rule entryRuleSpeed
entryRuleSpeed returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpeedRule()); }
	iv_ruleSpeed=ruleSpeed
	{ $current=$iv_ruleSpeed.current; }
	EOF;

// Rule Speed
ruleSpeed returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSpeedAccess().getSpeedAction_0(),
					$current);
			}
		)
		otherlv_1='Speed'
		{
			newLeafNode(otherlv_1, grammarAccess.getSpeedAccess().getSpeedKeyword_1());
		}
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Variable'
		{
			newLeafNode(otherlv_0, grammarAccess.getVariableAccess().getVariableKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getVariableAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='var'
		{
			newLeafNode(otherlv_2, grammarAccess.getVariableAccess().getVarKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getVariableAccess().getVarVarDeclCrossReference_3_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getVariableAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleNot
entryRuleNot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotRule()); }
	iv_ruleNot=ruleNot
	{ $current=$iv_ruleNot.current; }
	EOF;

// Rule Not
ruleNot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Not'
		{
			newLeafNode(otherlv_0, grammarAccess.getNotAccess().getNotKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getNotAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='expr'
		{
			newLeafNode(otherlv_2, grammarAccess.getNotAccess().getExprKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNotAccess().getExprCompareParserRuleCall_3_0());
				}
				lv_expr_3_0=ruleCompare
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNotRule());
					}
					set(
						$current,
						"expr",
						lv_expr_3_0,
						"robotScript.RobotScript.Compare");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getNotAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleCompare
entryRuleCompare returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompareRule()); }
	iv_ruleCompare=ruleCompare
	{ $current=$iv_ruleCompare.current; }
	EOF;

// Rule Compare
ruleCompare returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Compare'
		{
			newLeafNode(otherlv_0, grammarAccess.getCompareAccess().getCompareKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCompareAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='exprs'
		{
			newLeafNode(otherlv_2, grammarAccess.getCompareAccess().getExprsKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getCompareAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompareAccess().getExprsAddParserRuleCall_4_0());
				}
				lv_exprs_4_0=ruleAdd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompareRule());
					}
					add(
						$current,
						"exprs",
						lv_exprs_4_0,
						"robotScript.RobotScript.Add");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getCompareAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompareAccess().getExprsAddParserRuleCall_5_1_0());
					}
					lv_exprs_6_0=ruleAdd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompareRule());
						}
						add(
							$current,
							"exprs",
							lv_exprs_6_0,
							"robotScript.RobotScript.Add");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getCompareAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getCompareAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleMul
entryRuleMul returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMulRule()); }
	iv_ruleMul=ruleMul
	{ $current=$iv_ruleMul.current; }
	EOF;

// Rule Mul
ruleMul returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Mul'
		{
			newLeafNode(otherlv_0, grammarAccess.getMulAccess().getMulKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMulAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='exprs'
		{
			newLeafNode(otherlv_2, grammarAccess.getMulAccess().getExprsKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getMulAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMulAccess().getExprsPrimaryAriExprParserRuleCall_4_0());
				}
				lv_exprs_4_0=rulePrimaryAriExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMulRule());
					}
					add(
						$current,
						"exprs",
						lv_exprs_4_0,
						"robotScript.RobotScript.PrimaryAriExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getMulAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMulAccess().getExprsPrimaryAriExprParserRuleCall_5_1_0());
					}
					lv_exprs_6_0=rulePrimaryAriExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMulRule());
						}
						add(
							$current,
							"exprs",
							lv_exprs_6_0,
							"robotScript.RobotScript.PrimaryAriExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getMulAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getMulAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleAriUnOp
entryRuleAriUnOp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAriUnOpRule()); }
	iv_ruleAriUnOp=ruleAriUnOp
	{ $current=$iv_ruleAriUnOp.current; }
	EOF;

// Rule AriUnOp
ruleAriUnOp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AriUnOp'
		{
			newLeafNode(otherlv_0, grammarAccess.getAriUnOpAccess().getAriUnOpKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAriUnOpAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='expr'
		{
			newLeafNode(otherlv_2, grammarAccess.getAriUnOpAccess().getExprKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAriUnOpAccess().getExprExpressionParserRuleCall_3_0());
				}
				lv_expr_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAriUnOpRule());
					}
					set(
						$current,
						"expr",
						lv_expr_3_0,
						"robotScript.RobotScript.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getAriUnOpAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Rule Unit
ruleUnit returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='m'
			{
				$current = grammarAccess.getUnitAccess().getMEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getUnitAccess().getMEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='dm'
			{
				$current = grammarAccess.getUnitAccess().getDmEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getUnitAccess().getDmEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='cm'
			{
				$current = grammarAccess.getUnitAccess().getCmEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getUnitAccess().getCmEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='mm'
			{
				$current = grammarAccess.getUnitAccess().getMmEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getUnitAccess().getMmEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
